{"version":3,"sources":["components/Navbar.js","components/Textforms.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_jsx","className","mode","children","_jsxs","Link","to","title","type","id","about","concat","textclr","role","onClick","toggleMode","htmlFor","text","Textforms","_useState","useState","_useState2","_slicedToArray","setText","_Fragment","style","style2","heading","style1","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","replace","trim","split","length","textLength","Alert","height","alert","newType","slice","capatalize","message","About","defaultProps","App","setMode","_useState3","_useState4","setTextclr","_useState5","_useState6","_useState7","backgroundColor","color","_useState8","setStyle1","_useState9","_useState10","setStyle2","_useState11","_useState12","setAlert","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","setTimeout","stop","_x","_x2","apply","arguments","Router","document","body","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.3a8f43b9.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n\r\n    <nav className=\"navbar navbar-expand-lg bg-body-tertiary bg-dark border-bottom border-bottom-dark\" data-bs-theme={props.mode}>\r\n\r\n\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to='/'>{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className={`nav-link active`} aria-current=\"page\" to='/'>Home</Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to='/about'>{props.about}</Link>\r\n            </li>\r\n\r\n\r\n\r\n          </ul>\r\n\r\n\r\n          <form className=\"d-flex\" >\r\n            <div className={`form-check form-switch ${props.textclr}`} id='switch1'>\r\n              <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.text}</label>\r\n            </div>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'set title here'\r\n};\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Textforms(props) {\r\n\r\n    const convertToUC = () => {\r\n\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"success\",\"Converted to Upper-Case\")\r\n    }\r\n\r\n    const convertToLC = () => {\r\n\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"success\",\"Converted to Lower-Case\")\r\n    }\r\n\r\n    const clearText = () => {\r\n\r\n        setText(\"\")\r\n    }\r\n\r\n    const editText = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const copyText = () => {\r\n        navigator.clipboard.writeText(text)\r\n        props.showAlert(\"success\",\"Text Copied\")\r\n    }\r\n    const removeSpaces = () => {\r\n        let newText = text.replace(/\\s+/g,'');\r\n        newText = text.replace(/\\s+/g,' ').trim();\r\n        setText(newText)\r\n        props.showAlert(\"success\",\"Extra spaces removed\")\r\n    }\r\n\r\n    const textLength=(text)=>{\r\n        if(text===\"\"){\r\n            return \"0\"\r\n        }\r\n        else{\r\n            return (text.split(\" \").length)\r\n        }\r\n    }\r\n\r\n\r\n    const [text, setText] = useState(\"Type here\")\r\n\r\n    return (\r\n\r\n        <>\r\n            <form className='container' id='form1'>\r\n\r\n                <div className=\"mb-3\" >\r\n                    <h2 className=\"form-label my-3\" style={props.style2}>{props.heading}</h2>\r\n\r\n                    <textarea style={props.style1} type=\"text\" value={text} onChange={editText} className=\"form-control\" id=\"exampleInput\" rows=\"8\" />\r\n\r\n                </div>\r\n\r\n            </form>\r\n\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={convertToUC}>Convert To Uppercase</button>\r\n\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={convertToLC}>Convert To Lowercase</button>\r\n\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={clearText}>Clear Text</button>\r\n\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={copyText}>Copy Text</button>\r\n\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={removeSpaces}>Remove Extra Spaces</button>\r\n\r\n\r\n            <div className='container my-5' style={props.style2}>\r\n                <h3>TEXT Summary</h3>\r\n\r\n                <p>{textLength(text)} words and {text.length} characters</p>\r\n\r\n                <h3>Preview</h3>\r\n                <p>{text}</p>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n","import React from 'react'\r\n\r\n\r\n\r\nexport default function Alert(props) {\r\n\r\n\r\n\r\n    const capatalize = (type) => {\r\n        let newType = type.toLowerCase();\r\n        newType = newType[0].toUpperCase() + newType.slice(1)\r\n        return (newType)\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{height:\"50px\"}}>\r\n            {props.alert.type && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{`${capatalize(props.alert.type)} !`}</strong> {props.alert.message}\r\n\r\n\r\n            </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle, setStyle] = useState(\r\n    //     {\r\n    //         color: \"black\",\r\n    //         backgroundColor: \"white\",\r\n    //         padding: \"4px\"\r\n    //     })\r\n    // const [btnText, setBtnText] = useState(\"Enable Dark Mode\")\r\n    // const [btnClass, setBtnClass] = useState(\"my-3 btn btn-success\")\r\n\r\n    // const toggleTheme = () => {\r\n    //     if (myStyle.backgroundColor === \"white\") {\r\n    //         setStyle({\r\n    //             color: \"white\",\r\n    //             backgroundColor: \"black\",\r\n    //             padding: \"4px\"\r\n    //         })\r\n    //         setBtnText(\"Enable Light Mode\")\r\n    //         setBtnClass(\"my-3 btn btn-primary\")\r\n    //     }\r\n    //     else {\r\n    //         setStyle({\r\n    //             color: \"black\",\r\n    //             backgroundColor: \"white\",\r\n    //             padding: \"4px\"\r\n    //         })\r\n    //         setBtnText(\"Enable Dark Mode\")\r\n    //         setBtnClass(\"my-3 btn btn-success\")\r\n\r\n    //     }\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"accordion container my-3\" style={props.style2}  id=\"accordionExample\">\r\n                <h1 className='my-2' >About Us</h1>\r\n                <div className=\"accordion-item\" style={props.style1} >\r\n                    <h2 className=\"accordion-header\">\r\n                        <button style={props.style1} className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={props.style1} className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button style={props.style1} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={props.style1} className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button style={props.style1} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* <button onClick={toggleTheme} type=\"button\" className= {btnClass}>{btnText}</button> */}\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import {\n  BrowserRouter as Router,\n  Routes,\n  Route\n  \n} from 'react-router-dom';\nimport React, { useState } from 'react'\nimport Navbar from \"./components/Navbar.js\"\nimport Textforms from \"./components/Textforms.js\"\nimport Alert from './components/Alert.js'\nimport About from './components/About.js'\nimport './App.css';\n\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\")\n  const [textclr, setTextclr] = useState(\"text-dark\")\n  const [text, setText] = useState(\"Enable Dark Mode\")\n  const [style1, setStyle1] = useState({\n    backgroundColor: \"white\",\n    color: \"black\"\n  })\n  const [style2, setStyle2] = useState({\n\n    color: \"black\"\n  })\n  const [alert, setAlert] = useState({\n    type: null,\n    message: null\n  })\n  \n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      document.title = \"TEXTUtils - Dark Mode\"\n\n      setMode(\"dark\")\n      setTextclr(\"text-light\")\n      setText(\"Enable Light Mode\")\n\n      document.body.style.backgroundColor = \"#21223d\"\n\n      setStyle1({\n        backgroundColor: \"#1c1b1de6\",\n        color: \"white\"\n      })\n\n      setStyle2({\n        color: \"white\"\n      })\n\n      showAlert(\"success\", \"dark-mode activated\")\n    }\n    else {\n      document.title = \"TEXTUtils - Light Mode\"\n\n      setMode(\"light\")\n      setTextclr(\"text-dark\")\n      setText(\"Enable Dark Mode\")\n\n      document.body.style.backgroundColor = \"white\"\n      setStyle1({\n        backgroundColor: \"white\",\n        color: \"black\"\n      })\n\n      setStyle2({\n        color: \"black\"\n      })\n    }\n  }\n\n  const showAlert = async (type, message) => {\n\n\n\n    await setAlert({\n      type: type,\n      message: message\n    })\n\n\n    setTimeout(() => {\n      showAlert(null)\n    }, 1500);\n  }\n\n  \n  return (\n    <>\n      <Router>\n\n        <Navbar title={\"TEXTUtils\"} about={\"About Us\"} mode={mode} toggleMode={toggleMode} text={text} textclr={textclr}  />\n\n        <Alert alert={alert} />\n\n        <Routes>\n\n          <Route exact path='/' element={<div className='container'>\n            <Textforms heading={\"Write your TEXT inside the provided box.\"} style1={style1} style2={style2} showAlert={showAlert}  />\n          </div>}>\n\n          </Route>\n          <Route exact path='/about' element={< About style1={style1} style2={style2} />}></Route>\n\n        </Routes>\n\n      </Router>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}